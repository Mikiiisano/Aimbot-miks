-- Variables iniciales
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local userInputService = game:GetService("UserInputService")
local combatCooldown = false

-- Función para encontrar el enemigo más cercano
local function findNearestEnemy()
    local closestEnemy = nil
    local closestDistance = math.huge
    for _, enemy in pairs(workspace:GetChildren()) do
        if enemy:IsA("Model") and enemy:FindFirstChild("Humanoid") and enemy ~= character then
            local distance = (character.PrimaryPart.Position - enemy.PrimaryPart.Position).magnitude
            if distance < closestDistance then
                closestDistance = distance
                closestEnemy = enemy
            end
        end
    end
    return closestEnemy
end

-- Función para atacar al enemigo
local function attackEnemy(enemy)
    if enemy and enemy:FindFirstChild("Humanoid") and not combatCooldown then
        combatCooldown = true
        humanoid:MoveTo(enemy.PrimaryPart.Position)  -- Moverse hacia el enemigo
        wait(0.5)  -- Esperar un momento antes de atacar

        -- Lógica para atacar
        -- Cambia esto según la lógica de combate del juego
        player:FindFirstChild("Attack"):FireServer(enemy)  -- Asegúrate de que "Attack" sea el nombre correcto

        -- Lógica de defensa
        if enemy.Humanoid.Health < 50 then
            humanoid:MoveTo(character.PrimaryPart.Position + (character.PrimaryPart.Position - enemy.PrimaryPart.Position).unit * 10) -- Escapar si la salud del enemigo es baja
        end

        wait(2)  -- Tiempo de recarga para el ataque
        combatCooldown = false
    end
end

-- Función para aprender y adaptarse
local function learnAndAdapt()
    while true do
        wait(1)  -- Esperar un segundo entre acciones

        local enemy = findNearestEnemy()
        if enemy then
            attackEnemy(enemy)  -- Atacar al enemigo más cercano
        else
            -- Movimiento exploratorio
            local direction = Vector3.new(math.random(-1, 1), 0, math.random(-1, 1)).unit
            humanoid:MoveTo(character.PrimaryPart.Position + direction * 5)
        end
    end
end

-- Iniciar el comportamiento de la IA
learnAndAdapt()
